<?xml version="1.0" encoding="utf-8"?>
<FxCopProject Version="10.0" Name="My FxCop Project">
 <ProjectOptions>
  <SharedProject>True</SharedProject>
  <Stylesheet Apply="False">$(FxCopDir)\Xml\FxCopReport.xsl</Stylesheet>
  <SaveMessages>
   <Project Status="Active, Excluded, Good, Noise" NewOnly="False" />
   <Report Status="Active, Good, Noise" NewOnly="False" />
  </SaveMessages>
  <ProjectFile Compress="True" DefaultTargetCheck="True" DefaultRuleCheck="True" SaveByRuleGroup="" Deterministic="True" />
  <EnableMultithreadedLoad>True</EnableMultithreadedLoad>
  <EnableMultithreadedAnalysis>True</EnableMultithreadedAnalysis>
  <SourceLookup>True</SourceLookup>
  <AnalysisExceptionsThreshold>10</AnalysisExceptionsThreshold>
  <RuleExceptionsThreshold>1</RuleExceptionsThreshold>
  <Spelling Locale="en-US" />
  <OverrideRuleVisibilities>False</OverrideRuleVisibilities>
  <CustomDictionaries SearchFxCopDir="True" SearchUserProfile="True" SearchProjectDir="True" />
  <SearchGlobalAssemblyCache>False</SearchGlobalAssemblyCache>
  <DeadlockDetectionTimeout>120</DeadlockDetectionTimeout>
  <IgnoreGeneratedCode>False</IgnoreGeneratedCode>
 </ProjectOptions>
 <Targets>
  <AssemblyReferenceDirectories>
   <Directory>$(ProjectDir)/bin/Debug/</Directory>
  </AssemblyReferenceDirectories>
  <Target Name="$(ProjectDir)/NuPlot/bin/Debug/NuPlot.dll" Analyze="True" AnalyzeAllChildren="True" />
 </Targets>
 <Rules>
  <RuleFiles>
   <RuleFile Name="$(FxCopDir)\Rules\DesignRules.dll" Enabled="True" AllRulesEnabled="True" />
   <RuleFile Name="$(FxCopDir)\Rules\GlobalizationRules.dll" Enabled="True" AllRulesEnabled="True" />
   <RuleFile Name="$(FxCopDir)\Rules\InteroperabilityRules.dll" Enabled="True" AllRulesEnabled="True" />
   <RuleFile Name="$(FxCopDir)\Rules\MobilityRules.dll" Enabled="True" AllRulesEnabled="True" />
   <RuleFile Name="$(FxCopDir)\Rules\NamingRules.dll" Enabled="True" AllRulesEnabled="True" />
   <RuleFile Name="$(FxCopDir)\Rules\PerformanceRules.dll" Enabled="True" AllRulesEnabled="True" />
   <RuleFile Name="$(FxCopDir)\Rules\PortabilityRules.dll" Enabled="True" AllRulesEnabled="True" />
   <RuleFile Name="$(FxCopDir)\Rules\SecurityRules.dll" Enabled="True" AllRulesEnabled="True" />
   <RuleFile Name="$(FxCopDir)\Rules\SecurityTransparencyRules.dll" Enabled="True" AllRulesEnabled="True" />
   <RuleFile Name="$(FxCopDir)\Rules\UsageRules.dll" Enabled="True" AllRulesEnabled="True" />
  </RuleFiles>
  <Groups />
  <Settings />
 </Rules>
 <FxCopReport Version="10.0">
  <Namespaces>
   <Namespace Name="XamlGeneratedNamespace">
    <Messages>
     <Message TypeName="AvoidNamespacesWithFewTypes" Category="Microsoft.Design" CheckId="CA1020" Created="2011-08-03 17:26:48Z">
      <Issue>
       <Item>XamlGeneratedNamespace</Item>
      </Issue>
     </Message>
    </Messages>
   </Namespace>
  </Namespaces>
  <Targets>
   <Target Name="$(ProjectDir)/NuPlot/bin/Debug/NuPlot.dll">
    <Modules>
     <Module Name="nuplot.dll">
      <Messages>
       <Message TypeName="AssembliesShouldHaveValidStrongNames" Category="Microsoft.Design" CheckId="CA2210" Created="2011-08-03 17:26:48Z">
        <Issue Name="NoStrongName">
         <Item>'NuPlot.dll'</Item>
        </Issue>
       </Message>
       <Message TypeName="MarkAssembliesWithNeutralResourcesLanguage" Category="Microsoft.Performance" CheckId="CA1824" Created="2011-08-03 17:26:48Z">
        <Issue>
         <Item>'NuPlot.dll'</Item>
        </Issue>
       </Message>
      </Messages>
      <Namespaces>
       <Namespace Name="NuPlot">
        <Types>
         <Type Name="AxisUtils">
          <Messages>
           <Message Id="Utils" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Created="2014-05-26 19:31:07Z">
            <Issue Name="Type">
             <Item>Utils</Item>
             <Item>'AxisUtils'</Item>
            </Issue>
           </Message>
          </Messages>
         </Type>
         <Type Name="DateTimeAxis">
          <Members>
           <Member Name="#ChooseLargeTickValue(NuPlot.TimeStep)">
            <Messages>
             <Message TypeName="DoNotRaiseReservedExceptionTypes" Category="Microsoft.Usage" CheckId="CA2201" Created="2014-05-26 19:31:07Z">
              <Issue Name="TooGeneric">
               <Item>'DateTimeAxis.ChooseLargeTickValue(TimeStep)'</Item>
               <Item>'ApplicationException'</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
           <Member Name="#ChooseTimeUnit(System.TimeSpan)">
            <Messages>
             <Message TypeName="MarkMembersAsStatic" Category="Microsoft.Performance" CheckId="CA1822" Created="2014-05-26 19:31:07Z" FixCategory="NonBreaking">
              <Issue>
               <Item>'DateTimeAxis.ChooseTimeUnit(TimeSpan)'</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
           <Member Name="#Convert(System.Object)">
            <Messages>
             <Message Id="System.String.Format(System.String,System.Object)" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Created="2011-08-03 17:26:48Z">
              <Issue Name="IFormatProviderAlternateString">
               <Item>'string.Format(string, object)'</Item>
               <Item>'DateTimeAxis.Convert(object)'</Item>
               <Item>'string.Format(IFormatProvider, string, params object[])'</Item>
               <Item>'CultureInfo.CurrentCulture'</Item>
               <Item>'CultureInfo.InvariantCulture'</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
           <Member Name="#FinishFittingRangeToData()">
            <Messages>
             <Message Id="System.String.Format(System.String,System.Object,System.Object)" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Created="2014-05-26 19:31:07Z">
              <Issue Name="IFormatProviderAlternateString">
               <Item>'string.Format(string, object, object)'</Item>
               <Item>'DateTimeAxis.FinishFittingRangeToData()'</Item>
               <Item>'string.Format(IFormatProvider, string, params object[])'</Item>
               <Item>'CultureInfo.CurrentCulture'</Item>
               <Item>'CultureInfo.InvariantCulture'</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
           <Member Name="#GetLargeTickLabelFormat(System.Double)">
            <Messages>
             <Message TypeName="DoNotRaiseReservedExceptionTypes" Category="Microsoft.Usage" CheckId="CA2201" Created="2014-05-26 19:31:07Z">
              <Issue Name="TooGeneric">
               <Item>'DateTimeAxis.GetLargeTickLabelFormat(double)'</Item>
               <Item>'ApplicationException'</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
           <Member Name="#LargeTickStep">
            <Accessors>
             <Accessor Name="#set_LargeTickStep(NuPlot.TimeStep)">
              <Messages>
               <Message TypeName="InstantiateArgumentExceptionsCorrectly" Category="Microsoft.Usage" CheckId="CA2208" Created="2014-05-26 19:31:07Z">
                <Issue Name="IncorrectParameterName">
                 <Item>'DateTimeAxis.LargeTickStep.set(TimeStep)'</Item>
                 <Item>LargeTickStep</Item>
                 <Item>'paramName'</Item>
                 <Item>'ArgumentException'</Item>
                </Issue>
               </Message>
              </Messages>
             </Accessor>
            </Accessors>
           </Member>
          </Members>
         </Type>
         <Type Name="LinearAxis">
          <Members>
           <Member Name="#Convert(System.Object)">
            <Messages>
             <Message Id="System.String.Format(System.String,System.Object)" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Created="2011-08-03 17:26:48Z">
              <Issue Name="IFormatProviderAlternateString">
               <Item>'string.Format(string, object)'</Item>
               <Item>'LinearAxis.Convert(object)'</Item>
               <Item>'string.Format(IFormatProvider, string, params object[])'</Item>
               <Item>'CultureInfo.CurrentCulture'</Item>
               <Item>'CultureInfo.InvariantCulture'</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
           <Member Name="#FinishFittingRangeToData()">
            <Messages>
             <Message Id="System.String.Format(System.String,System.Object,System.Object)" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Created="2014-05-26 19:31:07Z">
              <Issue Name="IFormatProviderAlternateString">
               <Item>'string.Format(string, object, object)'</Item>
               <Item>'LinearAxis.FinishFittingRangeToData()'</Item>
               <Item>'string.Format(IFormatProvider, string, params object[])'</Item>
               <Item>'CultureInfo.CurrentCulture'</Item>
               <Item>'CultureInfo.InvariantCulture'</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
           <Member Name="#LargeTickStep">
            <Accessors>
             <Accessor Name="#set_LargeTickStep(System.Nullable`1&lt;System.Double&gt;)">
              <Messages>
               <Message TypeName="InstantiateArgumentExceptionsCorrectly" Category="Microsoft.Usage" CheckId="CA2208" Created="2014-05-26 19:31:07Z">
                <Issue Name="IncorrectParameterName">
                 <Item>'LinearAxis.LargeTickStep.set(double?)'</Item>
                 <Item>LargeTickStep</Item>
                 <Item>'paramName'</Item>
                 <Item>'ArgumentException'</Item>
                </Issue>
               </Message>
              </Messages>
             </Accessor>
            </Accessors>
           </Member>
          </Members>
         </Type>
         <Type Name="LinePlot">
          <Members>
           <Member Name="#DrawLine(NuPlot.AxisBase,NuPlot.AxisBase,NuPlot.Viewport,System.Windows.Size)">
            <Messages>
             <Message Id="x" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Created="2011-08-03 17:26:48Z">
              <Issue Name="MemberParameter">
               <Item>'LinePlot.DrawLine(AxisBase, AxisBase, Viewport, Size)'</Item>
               <Item>x</Item>
               <Item>'xAxis'</Item>
              </Issue>
             </Message>
             <Message Id="y" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Created="2011-08-03 17:26:48Z">
              <Issue Name="MemberParameter">
               <Item>'LinePlot.DrawLine(AxisBase, AxisBase, Viewport, Size)'</Item>
               <Item>y</Item>
               <Item>'yAxis'</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
          </Members>
         </Type>
         <Type Name="Plot">
          <Members>
           <Member Name="#Axis_RangeChanged(System.Object,System.EventArgs)">
            <Messages>
             <Message Id="System.String.Format(System.String,System.Object)" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Created="2011-08-03 17:26:48Z">
              <Issue Name="IFormatProviderAlternateString">
               <Item>'string.Format(string, object)'</Item>
               <Item>'Plot.Axis_RangeChanged(object, EventArgs)'</Item>
               <Item>'string.Format(IFormatProvider, string, params object[])'</Item>
               <Item>'CultureInfo.CurrentCulture'</Item>
               <Item>'CultureInfo.InvariantCulture'</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
           <Member Name="#FitAxisRangesToData()">
            <Messages>
             <Message Id="System.String.Format(System.String,System.Object)" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Created="2014-05-26 19:31:07Z">
              <Issue Name="IFormatProviderAlternateString">
               <Item>'string.Format(string, object)'</Item>
               <Item>'Plot.FitAxisRangesToData()'</Item>
               <Item>'string.Format(IFormatProvider, string, params object[])'</Item>
               <Item>'CultureInfo.CurrentCulture'</Item>
               <Item>'CultureInfo.InvariantCulture'</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
           <Member Name="#Plot_DataChanged(System.Object,System.EventArgs)">
            <Messages>
             <Message Id="System.String.Format(System.String,System.Object)" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Created="2011-08-03 17:26:48Z">
              <Issue Name="IFormatProviderAlternateString">
               <Item>'string.Format(string, object)'</Item>
               <Item>'Plot.Plot_DataChanged(object, EventArgs)'</Item>
               <Item>'string.Format(IFormatProvider, string, params object[])'</Item>
               <Item>'CultureInfo.CurrentCulture'</Item>
               <Item>'CultureInfo.InvariantCulture'</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
           <Member Name="#System.Windows.Markup.IComponentConnector.Connect(System.Int32,System.Object)">
            <Messages>
             <Message TypeName="DoNotCastUnnecessarily" Category="Microsoft.Performance" CheckId="CA1800" Created="2011-08-03 17:26:48Z">
              <Issue Name="Parameter">
               <Item>'target'</Item>
               <Item>'AxisView'</Item>
               <Item>'Plot.IComponentConnector.Connect(int, object)'</Item>
               <Item>castclass</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
          </Members>
         </Type>
         <Type Name="PlotBase">
          <Members>
           <Member Name="#GetNormalizedPoints(NuPlot.AxisBase,NuPlot.AxisBase)">
            <Messages>
             <Message Id="x" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Created="2011-08-03 17:26:48Z">
              <Issue Name="MemberParameter">
               <Item>'PlotBase.GetNormalizedPoints(AxisBase, AxisBase)'</Item>
               <Item>x</Item>
               <Item>'xAxis'</Item>
              </Issue>
             </Message>
             <Message Id="y" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Created="2011-08-03 17:26:48Z">
              <Issue Name="MemberParameter">
               <Item>'PlotBase.GetNormalizedPoints(AxisBase, AxisBase)'</Item>
               <Item>y</Item>
               <Item>'yAxis'</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
           <Member Name="#GetPoints()">
            <Messages>
             <Message TypeName="UsePropertiesWhereAppropriate" Category="Microsoft.Design" CheckId="CA1024" Created="2011-08-03 17:26:48Z">
              <Issue Certainty="50">
               <Item>'PlotBase.GetPoints()'</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
           <Member Name="#SetView(NuPlot.AxisBase,NuPlot.AxisBase,NuPlot.Viewport)">
            <Messages>
             <Message Id="x" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Created="2011-08-03 17:26:48Z">
              <Issue Name="MemberParameter">
               <Item>'PlotBase.SetView(AxisBase, AxisBase, Viewport)'</Item>
               <Item>x</Item>
               <Item>'xAxis'</Item>
              </Issue>
             </Message>
             <Message Id="y" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Created="2011-08-03 17:26:48Z">
              <Issue Name="MemberParameter">
               <Item>'PlotBase.SetView(AxisBase, AxisBase, Viewport)'</Item>
               <Item>y</Item>
               <Item>'yAxis'</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
           <Member Name="#UpdateView(NuPlot.AxisBase,NuPlot.AxisBase,NuPlot.Viewport,System.Windows.Size)">
            <Messages>
             <Message Id="x" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Created="2011-08-03 17:26:48Z">
              <Issue Name="MemberParameter">
               <Item>'PlotBase.UpdateView(AxisBase, AxisBase, Viewport, Size)'</Item>
               <Item>x</Item>
               <Item>'xAxis'</Item>
              </Issue>
             </Message>
             <Message Id="y" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Created="2011-08-03 17:26:48Z">
              <Issue Name="MemberParameter">
               <Item>'PlotBase.UpdateView(AxisBase, AxisBase, Viewport, Size)'</Item>
               <Item>y</Item>
               <Item>'yAxis'</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
          </Members>
         </Type>
         <Type Name="PointPlot">
          <Members>
           <Member Name="#DrawMarkers(NuPlot.AxisBase,NuPlot.AxisBase,NuPlot.Viewport,System.Windows.Size)">
            <Messages>
             <Message Id="x" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Created="2011-08-03 17:26:48Z">
              <Issue Name="MemberParameter">
               <Item>'PointPlot.DrawMarkers(AxisBase, AxisBase, Viewport, Size)'</Item>
               <Item>x</Item>
               <Item>'xAxis'</Item>
              </Issue>
             </Message>
             <Message Id="y" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Created="2011-08-03 17:26:48Z">
              <Issue Name="MemberParameter">
               <Item>'PointPlot.DrawMarkers(AxisBase, AxisBase, Viewport, Size)'</Item>
               <Item>y</Item>
               <Item>'yAxis'</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
          </Members>
         </Type>
         <Type Name="ReflectionUtils">
          <Members>
           <Member Name="#CreateGetter(System.Type,System.String)">
            <Messages>
             <Message Id="System.String.Format(System.String,System.Object,System.Object)" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Created="2011-08-03 17:26:48Z">
              <Issue Name="IFormatProviderAlternateString">
               <Item>'string.Format(string, object, object)'</Item>
               <Item>'ReflectionUtils.CreateGetter(Type, string)'</Item>
               <Item>'string.Format(IFormatProvider, string, params object[])'</Item>
               <Item>'CultureInfo.CurrentCulture'</Item>
               <Item>'CultureInfo.InvariantCulture'</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
           <Member Name="#GetPoints(System.Object,System.String,System.String)">
            <Messages>
             <Message Id="System.String.Format(System.String,System.Object)" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Created="2011-08-03 17:26:48Z">
              <Issue Name="IFormatProviderAlternateString">
               <Item>'string.Format(string, object)'</Item>
               <Item>'ReflectionUtils.GetPoints(object, string, string)'</Item>
               <Item>'string.Format(IFormatProvider, string, params object[])'</Item>
               <Item>'CultureInfo.CurrentCulture'</Item>
               <Item>'CultureInfo.InvariantCulture'</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
          </Members>
         </Type>
         <Type Name="TimeStep">
          <Members>
           <Member Name="#.ctor(System.TimeSpan,NuPlot.TimeUnit)">
            <Messages>
             <Message TypeName="DoNotRaiseReservedExceptionTypes" Category="Microsoft.Usage" CheckId="CA2201" Created="2014-05-26 19:31:07Z">
              <Issue Name="TooGeneric">
               <Item>'TimeStep.TimeStep(TimeSpan, TimeUnit)'</Item>
               <Item>'ApplicationException'</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
           <Member Name="#op_Addition(System.DateTime,NuPlot.TimeStep)">
            <Messages>
             <Message TypeName="DoNotRaiseReservedExceptionTypes" Category="Microsoft.Usage" CheckId="CA2201" Created="2014-05-26 19:31:07Z">
              <Issue Name="TooGeneric">
               <Item>'TimeStep.operator +(DateTime, TimeStep)'</Item>
               <Item>'ApplicationException'</Item>
              </Issue>
             </Message>
             <Message TypeName="OperatorOverloadsHaveNamedAlternates" Category="Microsoft.Usage" CheckId="CA2225" Created="2014-05-26 19:31:07Z">
              <Issue>
               <Item>Add</Item>
               <Item>'TimeStep.operator +(DateTime, TimeStep)'</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
           <Member Name="#op_Division(System.TimeSpan,NuPlot.TimeStep)">
            <Messages>
             <Message TypeName="OperatorOverloadsHaveNamedAlternates" Category="Microsoft.Usage" CheckId="CA2225" Created="2014-05-26 19:31:07Z">
              <Issue>
               <Item>Divide</Item>
               <Item>'TimeStep.operator /(TimeSpan, TimeStep)'</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
           <Member Name="#op_Multiply(System.Double,NuPlot.TimeStep)">
            <Messages>
             <Message TypeName="OperatorOverloadsHaveNamedAlternates" Category="Microsoft.Usage" CheckId="CA2225" Created="2014-05-26 19:31:07Z">
              <Issue>
               <Item>Multiply</Item>
               <Item>'TimeStep.operator *(double, TimeStep)'</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
          </Members>
         </Type>
         <Type Name="Viewport">
          <Members>
           <Member Name="#.ctor(System.Double,System.Double,System.Double,System.Double)">
            <Messages>
             <Message Id="x" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Created="2011-08-03 17:34:14Z">
              <Issue Name="MemberParameter">
               <Item>'Viewport.Viewport(double, double, double, double)'</Item>
               <Item>x</Item>
               <Item>'xMax'</Item>
              </Issue>
              <Issue Name="MemberParameter">
               <Item>'Viewport.Viewport(double, double, double, double)'</Item>
               <Item>x</Item>
               <Item>'xMin'</Item>
              </Issue>
             </Message>
             <Message Id="y" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Created="2011-08-03 17:34:14Z">
              <Issue Name="MemberParameter">
               <Item>'Viewport.Viewport(double, double, double, double)'</Item>
               <Item>y</Item>
               <Item>'yMax'</Item>
              </Issue>
              <Issue Name="MemberParameter">
               <Item>'Viewport.Viewport(double, double, double, double)'</Item>
               <Item>y</Item>
               <Item>'yMin'</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
          </Members>
         </Type>
         <Type Name="WorldPoint">
          <Messages>
           <Message TypeName="OverrideEqualsAndOperatorEqualsOnValueTypes" Category="Microsoft.Performance" CheckId="CA1815" Created="2011-08-03 17:26:48Z">
            <Issue Name="Equals">
             <Item>'WorldPoint'</Item>
            </Issue>
            <Issue Name="op_Equality">
             <Item>'WorldPoint'</Item>
            </Issue>
           </Message>
          </Messages>
          <Members>
           <Member Name="#.ctor(System.Object,System.Object)">
            <Messages>
             <Message Id="x" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Created="2011-08-03 17:26:48Z">
              <Issue Name="MemberParameterMoreMeaningfulName">
               <Item>'WorldPoint.WorldPoint(object, object)'</Item>
               <Item>'x'</Item>
              </Issue>
             </Message>
             <Message Id="y" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Created="2011-08-03 17:26:48Z">
              <Issue Name="MemberParameterMoreMeaningfulName">
               <Item>'WorldPoint.WorldPoint(object, object)'</Item>
               <Item>'y'</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
           <Member Name="#X">
            <Messages>
             <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Created="2011-08-03 17:26:48Z">
              <Issue>
               <Item>'WorldPoint.X'</Item>
              </Issue>
             </Message>
             <Message Id="X" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Created="2011-08-03 17:26:48Z">
              <Issue Name="MemberMoreMeaningfulName">
               <Item>'WorldPoint.X'</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
           <Member Name="#Y">
            <Messages>
             <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Created="2011-08-03 17:26:48Z">
              <Issue>
               <Item>'WorldPoint.Y'</Item>
              </Issue>
             </Message>
             <Message Id="Y" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Created="2011-08-03 17:26:48Z">
              <Issue Name="MemberMoreMeaningfulName">
               <Item>'WorldPoint.Y'</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
          </Members>
         </Type>
        </Types>
       </Namespace>
      </Namespaces>
     </Module>
    </Modules>
   </Target>
  </Targets>
  <Rules>
   <Rule TypeName="AssembliesShouldHaveValidStrongNames" Category="Microsoft.Design" CheckId="CA2210">
    <Resolution Name="NoStrongName">Sign {0} with a strong name key.</Resolution>
   </Rule>
   <Rule TypeName="AvoidNamespacesWithFewTypes" Category="Microsoft.Design" CheckId="CA1020">
    <Resolution Name="Default">Consider merging the types defined in '{0}' with another namespace.</Resolution>
   </Rule>
   <Rule TypeName="DoNotCastUnnecessarily" Category="Microsoft.Performance" CheckId="CA1800">
    <Resolution Name="Parameter">{0}, a parameter, is cast to type {1} multiple times in method {2}. Cache the result of the 'as' operator or direct cast in order to eliminate the redundant {3} instruction.</Resolution>
   </Rule>
   <Rule TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051">
    <Resolution Name="Default">Because field {0} is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Resolution>
   </Rule>
   <Rule TypeName="DoNotRaiseReservedExceptionTypes" Category="Microsoft.Usage" CheckId="CA2201">
    <Resolution Name="TooGeneric">{0} creates an exception of type {1}, an exception type that is not sufficiently specific and should never be raised by user code. If this exception instance might be thrown, use a different exception type.</Resolution>
   </Rule>
   <Rule TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704">
    <Resolution Name="MemberMoreMeaningfulName">Consider providing a more meaningful name than member name {0}.</Resolution>
    <Resolution Name="MemberParameter">In method {0}, correct the spelling of '{1}' in parameter name {2} or remove it entirely if it represents any sort of Hungarian notation.</Resolution>
    <Resolution Name="MemberParameterMoreMeaningfulName">In method {0}, consider providing a more meaningful name than parameter name {1}.</Resolution>
    <Resolution Name="Type">Correct the spelling of '{0}' in type name {1}.</Resolution>
   </Rule>
   <Rule TypeName="InstantiateArgumentExceptionsCorrectly" Category="Microsoft.Usage" CheckId="CA2208">
    <Resolution Name="IncorrectParameterName">Method {0} passes '{1}' as the {2} argument to a {3} constructor. Replace this argument with one of the method's parameter names. Note that the provided parameter name should have the exact casing as declared on the method.</Resolution>
   </Rule>
   <Rule TypeName="MarkAssembliesWithNeutralResourcesLanguage" Category="Microsoft.Performance" CheckId="CA1824">
    <Resolution Name="Default">Because assembly {0} contains a ResX-based resource file, mark it with the NeutralResourcesLanguage attribute, specifying the language of the resources within the assembly. This could improve lookup performance the first time a resource is retrieved.</Resolution>
   </Rule>
   <Rule TypeName="MarkMembersAsStatic" Category="Microsoft.Performance" CheckId="CA1822">
    <Resolution Name="Default">The 'this' parameter (or 'Me' in Visual Basic) of {0} is never used. Mark the member as static (or Shared in Visual Basic) or use 'this'/'Me' in the method body or at least one property accessor, if appropriate.</Resolution>
   </Rule>
   <Rule TypeName="OperatorOverloadsHaveNamedAlternates" Category="Microsoft.Usage" CheckId="CA2225">
    <Resolution Name="Default">Provide a method named '{0}' as a friendly alternate for operator {1}.</Resolution>
   </Rule>
   <Rule TypeName="OverrideEqualsAndOperatorEqualsOnValueTypes" Category="Microsoft.Performance" CheckId="CA1815">
    <Resolution Name="Equals">{0} should override Equals.</Resolution>
    <Resolution Name="op_Equality">{0} should override the equality (==) and inequality (!=) operators.</Resolution>
   </Rule>
   <Rule TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305">
    <Resolution Name="IFormatProviderAlternateString">Because the behavior of {0} could vary based on the current user's locale settings, replace this call in {1} with a call to {2}. If the result of {2} will be displayed to the user, specify {3} as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify {4}.</Resolution>
   </Rule>
   <Rule TypeName="UsePropertiesWhereAppropriate" Category="Microsoft.Design" CheckId="CA1024">
    <Resolution Name="Default">Change {0} to a property if appropriate.</Resolution>
   </Rule>
  </Rules>
 </FxCopReport>
</FxCopProject>
